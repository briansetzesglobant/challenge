// Mocks generated by Mockito 5.4.0 from annotations
// in challenge/test/unit_test/bloc/person_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:challenge/src/core/resource/data_state.dart' as _i3;
import 'package:challenge/src/data/repository/repository.dart' as _i2;
import 'package:challenge/src/domain/entity/person/persons_list_entity.dart'
    as _i6;
import 'package:challenge/src/domain/use_case/implementation/person_use_case.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRepository_0 extends _i1.SmartFake implements _i2.Repository {
  _FakeRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDataState_1<T> extends _i1.SmartFake implements _i3.DataState<T> {
  _FakeDataState_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PersonUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockPersonUseCase extends _i1.Mock implements _i4.PersonUseCase {
  MockPersonUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Repository get personRepository => (super.noSuchMethod(
        Invocation.getter(#personRepository),
        returnValue: _FakeRepository_0(
          this,
          Invocation.getter(#personRepository),
        ),
      ) as _i2.Repository);

  @override
  _i5.Future<_i3.DataState<_i6.PersonsListEntity>> call({int? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {#id: id},
        ),
        returnValue: _i5.Future<_i3.DataState<_i6.PersonsListEntity>>.value(
            _FakeDataState_1<_i6.PersonsListEntity>(
          this,
          Invocation.method(
            #call,
            [],
            {#id: id},
          ),
        )),
      ) as _i5.Future<_i3.DataState<_i6.PersonsListEntity>>);
}
