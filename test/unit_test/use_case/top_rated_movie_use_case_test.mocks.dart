// Mocks generated by Mockito 5.4.0 from annotations
// in challenge/test/unit_test/use_case/top_rated_movie_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:challenge/src/core/resource/data_state.dart' as _i4;
import 'package:challenge/src/data/data_source/local/challenge_data_base.dart'
    as _i3;
import 'package:challenge/src/data/data_source/remote/api_service.dart' as _i2;
import 'package:challenge/src/data/repository/repository.dart' as _i5;
import 'package:challenge/src/domain/entity/movie/movies_list_entity.dart'
    as _i8;
import 'package:challenge/src/domain/entity/person/persons_list_entity.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiService_0 extends _i1.SmartFake implements _i2.ApiService {
  _FakeApiService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChallengeDataBase_1 extends _i1.SmartFake
    implements _i3.ChallengeDataBase {
  _FakeChallengeDataBase_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDataState_2<T> extends _i1.SmartFake implements _i4.DataState<T> {
  _FakeDataState_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Repository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRepository extends _i1.Mock implements _i5.Repository {
  MockRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ApiService get apiService => (super.noSuchMethod(
        Invocation.getter(#apiService),
        returnValue: _FakeApiService_0(
          this,
          Invocation.getter(#apiService),
        ),
      ) as _i2.ApiService);

  @override
  _i3.ChallengeDataBase get challengeDataBase => (super.noSuchMethod(
        Invocation.getter(#challengeDataBase),
        returnValue: _FakeChallengeDataBase_1(
          this,
          Invocation.getter(#challengeDataBase),
        ),
      ) as _i3.ChallengeDataBase);

  @override
  _i6.Future<_i4.DataState<_i7.PersonsListEntity>> getPersonsList() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPersonsList,
          [],
        ),
        returnValue: _i6.Future<_i4.DataState<_i7.PersonsListEntity>>.value(
            _FakeDataState_2<_i7.PersonsListEntity>(
          this,
          Invocation.method(
            #getPersonsList,
            [],
          ),
        )),
      ) as _i6.Future<_i4.DataState<_i7.PersonsListEntity>>);

  @override
  _i6.Future<_i4.DataState<_i8.MoviesListEntity>> getPopularMoviesList() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularMoviesList,
          [],
        ),
        returnValue: _i6.Future<_i4.DataState<_i8.MoviesListEntity>>.value(
            _FakeDataState_2<_i8.MoviesListEntity>(
          this,
          Invocation.method(
            #getPopularMoviesList,
            [],
          ),
        )),
      ) as _i6.Future<_i4.DataState<_i8.MoviesListEntity>>);

  @override
  _i6.Future<_i4.DataState<_i8.MoviesListEntity>> getTopRatedMoviesList() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedMoviesList,
          [],
        ),
        returnValue: _i6.Future<_i4.DataState<_i8.MoviesListEntity>>.value(
            _FakeDataState_2<_i8.MoviesListEntity>(
          this,
          Invocation.method(
            #getTopRatedMoviesList,
            [],
          ),
        )),
      ) as _i6.Future<_i4.DataState<_i8.MoviesListEntity>>);

  @override
  _i6.Future<_i4.DataState<_i8.MoviesListEntity>> getRecommendationsMoviesList(
          {required int? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecommendationsMoviesList,
          [],
          {#id: id},
        ),
        returnValue: _i6.Future<_i4.DataState<_i8.MoviesListEntity>>.value(
            _FakeDataState_2<_i8.MoviesListEntity>(
          this,
          Invocation.method(
            #getRecommendationsMoviesList,
            [],
            {#id: id},
          ),
        )),
      ) as _i6.Future<_i4.DataState<_i8.MoviesListEntity>>);

  @override
  _i6.Future<_i4.DataState<_i8.MoviesListEntity>> switchMovies(
    _i4.DataState<_i8.MoviesListEntity>? moviesList,
    String? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #switchMovies,
          [
            moviesList,
            category,
          ],
        ),
        returnValue: _i6.Future<_i4.DataState<_i8.MoviesListEntity>>.value(
            _FakeDataState_2<_i8.MoviesListEntity>(
          this,
          Invocation.method(
            #switchMovies,
            [
              moviesList,
              category,
            ],
          ),
        )),
      ) as _i6.Future<_i4.DataState<_i8.MoviesListEntity>>);
}
